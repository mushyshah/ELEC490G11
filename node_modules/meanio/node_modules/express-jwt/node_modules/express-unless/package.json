{
  "_args": [
    [
      "express-unless@https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
      "/Users/mushyshah/Documents/Final Year Project/VizTool/node_modules/meanio/node_modules/express-jwt"
    ]
  ],
  "_from": "https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
  "_id": "express-unless@0.0.0",
  "_inCache": true,
  "_location": "/meanio/express-jwt/express-unless",
  "_phantomChildren": {},
  "_requested": {
    "name": "express-unless",
    "raw": "express-unless@https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/meanio/express-jwt"
  ],
  "_resolved": "https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
  "_shasum": "cadc7285fba8577fb9be047634cfa738806f2bcf",
  "_shrinkwrap": null,
  "_spec": "express-unless@https://registry.npmjs.org/express-unless/-/express-unless-0.0.0.tgz",
  "_where": "/Users/mushyshah/Documents/Final Year Project/VizTool/node_modules/meanio/node_modules/express-jwt",
  "author": {
    "email": "jfromaniello@gmail.com",
    "name": "Jos√© F. Romaniello",
    "url": "http://joseoncode.com"
  },
  "bugs": {
    "url": "https://github.com/jfromaniello/express-unless/issues"
  },
  "dependencies": {},
  "description": "Conditionally add a middleware to express with some common patterns.",
  "devDependencies": {
    "chai": "~1.7.0",
    "mocha": "~1.11.0"
  },
  "homepage": "https://github.com/jfromaniello/express-unless#readme",
  "main": "index.js",
  "name": "express-unless",
  "optionalDependencies": {},
  "readme": "Conditionally skip a middleware when a condition is met.\n\n## Install\n\n\tnpm i express-unless --save\n\n## Usage\n\nWith existing middlewares:\n\n```javascript\nvar unless = require('express-unless');\n\n\nvar static = express.static(__dirname + '/public');\nstatic.unless = unless;\n\napp.use(static.unless({ method: 'OPTIONS' }));\n```\n\nIf you are authoring a middleware you can support unless as follow:\n\n```javascript\nmodule.exports = function (middlewareOptions) {\n  var mymid = function (req, res, next) {\n\n  };\n\n  mymid.unless = require('unless-express');\n\n  return mymid;\n};\n```\n\n## Current options\n\n-  `method` it could be an string or an array of strings. If the request method match the middleware will not run.\n-  `path` it could be an string, a regexp or an array of any of those. If the request path match, the middleware will not run.\n-  `ext` it could be an string or an array of strings. If the request path ends with one of these extensions the middleware will not run.\n-  `custom` it must be a function that accepts `req` and returns `true` / `false`. If the function returns true for the given request, ithe middleware will not run.\n\n\n## Examples\n\nRequire authentication for every request unless the path is index.html.\n\n```javascript\napp.use(requiresAuth.unless({ path: ['/index.html', '/'] }))\n```\n\nAvoid a fstat for request to routes doesnt end with a given extension.\n\n```javascript\napp.use(static.unless(function (req) {\n  var ext = url.parse(req.originalUrl).pathname.substr(-4);\n  return !~['.jpg', '.html', '.css', '.js'].indexOf(ext);\n}));\n```\n\n## License\n\nMIT 2014 - Jose Romaniello\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git://github.com/jfromaniello/express-unless.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "0.0.0"
}
