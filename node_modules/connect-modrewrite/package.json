{
  "_args": [
    [
      "connect-modrewrite@https://registry.npmjs.org/connect-modrewrite/-/connect-modrewrite-0.8.2.tgz",
      "/Users/mushyshah/Documents/Final Year Project/VizTool"
    ]
  ],
  "_from": "connect-modrewrite@latest",
  "_id": "connect-modrewrite@0.8.2",
  "_inCache": true,
  "_location": "/connect-modrewrite",
  "_phantomChildren": {},
  "_requested": {
    "name": "connect-modrewrite",
    "raw": "connect-modrewrite@https://registry.npmjs.org/connect-modrewrite/-/connect-modrewrite-0.8.2.tgz",
    "rawSpec": "https://registry.npmjs.org/connect-modrewrite/-/connect-modrewrite-0.8.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/connect-modrewrite/-/connect-modrewrite-0.8.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/connect-modrewrite/-/connect-modrewrite-0.8.2.tgz",
  "_shasum": "204348dc15c3210f1f219a70253cae51a4f3728d",
  "_shrinkwrap": null,
  "_spec": "connect-modrewrite@https://registry.npmjs.org/connect-modrewrite/-/connect-modrewrite-0.8.2.tgz",
  "_where": "/Users/mushyshah/Documents/Final Year Project/VizTool",
  "author": {
    "email": "tingan87@gmail.com",
    "name": "Tingan Ho"
  },
  "bugs": {
    "url": "https://github.com/tinganho/connect-modrewrite/issues"
  },
  "contributors": [
    {
      "name": "Tingan Ho",
      "email": "tingan87@gmail.com"
    }
  ],
  "dependencies": {
    "qs": "^1.2.2"
  },
  "description": "connect-modrewrite adds modrewrite functionality to connect/express server",
  "devDependencies": {
    "chai": "~1.4.2",
    "grunt": "~0.4.0",
    "grunt-contrib-jshint": "^0.8.0",
    "jshint-globals": "~0.1.0",
    "mocha": "~1.8.1",
    "proxyquire": "~0.5.2",
    "sinon": "~1.8.2",
    "sinon-chai": "~2.5.0"
  },
  "homepage": "https://github.com/%3Atinganho/connect-modrewrite#readme",
  "keywords": [
    "modrewrite"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tinganho/connect-modrewrite/blob/master/LICENSE-MIT"
    }
  ],
  "main": "./index.js",
  "name": "connect-modrewrite",
  "optionalDependencies": {},
  "readme": "connect-modrewrite [![Build Status](https://travis-ci.org/tinganho/connect-modrewrite.png)](https://travis-ci.org/tinganho/connect-modrewrite)\n========================\n\n[![NPM](https://nodei.co/npm/connect-modrewrite.png?downloads=true&stars=true)](https://nodei.co/npm/connect-modrewrite/)\n\n`connect-modrewrite` adds modrewrite functionality to connect/express server.\n\n# Getting started\nInstall `connect-modrewrite` with:\n```bash\nnpm install connect-modrewrite --save\n```\n\nRequire it:\n\n```javascript\nvar modRewrite = require('connect-modrewrite');\n```\nAn example configuration:\n\n```javascript\nvar app = connect() // express() for express 3.x  server\n// app.configure(function() { for express 3.x server\n  .use(modRewrite([\n    '^/test$ /index.html',\n    '^/test/\\\\d*$ /index.html [L]',\n    '^/test/\\\\d*/\\\\d*$ /flag.html [L]'\n  ]))\n  .use(connect.static(options.base))\n  .listen(3000)\n// }) for express 3.x server\n```\n\n# Configurations\nIn the example above, `modRewrite` take as an `Array` of rewrite rules as an argument.\nEach rewrite rule is a string with the syntax:\n`MATCHING_PATHS REPLACE_WITH [FLAGS]`.\n`MATCHING_PATHS` should be defined using a regex string. And that string is passed as an argument to the javascript `RegExp Object` for matching of paths. `REPLACE_WITH` is the replacement string for matching paths. Flags is optional and is defined using hard brackets.\n\n## Inverted URL matching\nBegin with `!` for inverted URL matching.\n\n## Use defined params\nJust wrap the defined param with `()` and access it with `$n`. This is defined in JS `.replace` in https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/String/replace.\n\n`^/blog/(.*) /$1`\n\n## Dash\nA dash indicates that no substitution should be performed.\n\n`^/blog/(.*) - [L]`\n\n## Flags\n### Last [L]\nIf a path matches, any subsequent rewrite rules will be disregarded.\n\n### Proxy [P]\nProxy your requests\n```javasript\n'^/test/proxy/(.*)$ http://nodejs.org/$1 [P]'\n```\n\n### Redirect [R], \\[R=3**\\] (replace * with numbers)\nIssue a redirect for request.\n\n### Nocase [NC]\nRegex match will be case-insensitive.\n\n### Forbidden [F]\nGives a HTTP 403 forbidden response.\n\n### Gone [G]\nGives a HTTP 410 gone response.\n\n### Type \\[T=*\\] (replace * with mime-type)\nSets content-type to the specified one.\n\n### Host [H], \\[H=*\\] (replace * with a regular expression that match a hostname)\nMatch on host.\n\nFor more info about available flags, please go to the Apache page:\nhttp://httpd.apache.org/docs/current/rewrite/flags.html\n\n## Authors\nTingan Ho, [@tingan87][]\n\n## License\nLicensed under the MIT license.\n\n## Other recommended projects\n### L10ns\n[L10ns][] is an internationalization workflow and formatting tool. It handles complex localization problems like pluralization, genus based formatting etc. It also provides a workflow similar to XGettext.\n\n[@tingan87]: https://twitter.com/tingan87\n[L10ns]: http://l10ns.org\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/%3Atinganho/connect-modrewrite.git"
  },
  "scripts": {
    "test": "./bin/test"
  },
  "version": "0.8.2"
}
